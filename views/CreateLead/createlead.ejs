<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Create Lead Form</title>
    <!-- Add Bootstrap CSS -->
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
    />

    <style>
      .delete-service {
        color: red;
        cursor: pointer;
      }
    </style>
  </head>
  <body>
    <div class="container mt-5">
      <div class="row">
        <div class="col-md-8 mx-auto">
          <h1 class="text-center mb-4">Service Form</h1>

          <form id="leadForm">
            <!-- First Name -->
            <div class="form-group">
              <label for="firstName">First Name</label>
              <input
                type="text"
                id="firstName"
                name="firstName"
                class="form-control"
                required
              />
            </div>

            <!-- Last Name -->
            <div class="form-group">
              <label for="lastName">Last Name</label>
              <input
                type="text"
                id="lastName"
                name="lastName"
                class="form-control"
                required
              />
            </div>

            <!-- Mobile Number -->
            <div class="form-group">
              <label for="phone">Mobile Number</label>
              <input
                type="tel"
                id="phone"
                name="phone"
                class="form-control"
                required
              />
            </div>

            <!-- Select Services from Dropdown -->
            <div class="form-group">
              <label for="serviceSelect">Select Services</label>
              <select
                name="services"
                id="serviceSelect"
                class="form-control"
                required
              >
                <option value="">Select Services</option>
                <% result.forEach((service) => { %>
                <option
                  value="<%= service.serviceName %>"
                  data-standardfees="<%= service.standardFees %>"
                >
                  <%= service.serviceName %>
                </option>
                <% }) %>
                <!-- Add more options as needed -->
              </select>
            </div>

            <!-- Standard Fees -->
            <div class="form-group">
              <label for="standardFees">Standard Fees</label>
              <input
                type="number"
                id="standardFees"
                name="standardFees"
                class="form-control"
                required
                value="<%= result.length ? result[0].standardFees : '' %>"
              />
            </div>

            <!-- Remarks -->
            <div class="form-group">
              <label for="remarks">Remarks</label>
              <textarea
                id="remarks"
                name="remarks"
                class="form-control"
                rows="3"
              ></textarea>
            </div>

            <!-- Add Service Button -->
            <button type="button" class="btn btn-primary" id="addServiceButton">
              Add Service
            </button>

            <!-- Selected Services Section -->
            <div id="selectedServicesSection" class="mt-4">
              <p>Selected Services:</p>
              <div id="selectedServices"></div>
              <p style="color: rgb(22, 179, 22)">
                Total Standard Fees: â‚¹<span id="totalStandardFees">0.00</span>
              </p>
            </div>

            <!-- Submit Button -->
            <button type="submit" class="btn btn-primary" id="submitFormButton">
              Submit
            </button>
          </form>
        </div>
      </div>
    </div>

    <!-- Add Bootstrap JS and Popper.js -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <script>
      // Add an event listener to the serviceSelect dropdown
      document
        .getElementById("serviceSelect")
        .addEventListener("change", function () {
          // Get the selected option
          const selectedOption = this.options[this.selectedIndex];

          // Update the value of the standardFees input
          document.getElementById("standardFees").value =
            selectedOption.getAttribute("data-standardfees");
        });

      // Add an event listener to the standardFees input for editing
      document
        .getElementById("standardFees")
        .addEventListener("input", function () {
          // Get the entered amount
          const enteredAmount = parseFloat(this.value);

          // Get the standard fees from the selected option
          const selectedOption =
            document.getElementById("serviceSelect").options[
              document.getElementById("serviceSelect").selectedIndex
            ];
          const standardFees = parseFloat(
            selectedOption.getAttribute("data-standardfees")
          );

          // Check if the entered amount is less than standard fees
          if (enteredAmount < standardFees) {
            // Show alert only once
            if (!window.alertShown) {
              alert("Amount cannot be less than the standard amount");
              window.alertShown = true;
            }
          } else {
            // Reset the alert flag if the entered amount is valid
            window.alertShown = false;
          }
        });

      // Global array to store selected services and their amounts
      const selectedServices = [];

      // Add an event listener to the "Add Service" button
      document
        .getElementById("addServiceButton")
        .addEventListener("click", function () {
          // Get the selected option
          const selectedOption =
            document.getElementById("serviceSelect").options[
              document.getElementById("serviceSelect").selectedIndex
            ];

          // Get the service name, amount, and remark
          const serviceName = selectedOption.value;
          const amount = parseFloat(
            document.getElementById("standardFees").value
          );
          const remark = document.getElementById("remarks").value;

          // Add the service to the selectedServices array
          selectedServices.push({ serviceName, amount, remark });

          // Display the selected services
          updateSelectedServicesDisplay();
          updateTotalStandardFees();
        });

      // Function to update the display of selected services
      function updateSelectedServicesDisplay() {
        const selectedServicesContainer =
          document.getElementById("selectedServices");

        // Clear the container
        selectedServicesContainer.innerHTML = "";

        // Display each selected service
        selectedServices.forEach((service, index) => {
          const serviceDiv = document.createElement("div");
          serviceDiv.className = "selected-service";
          serviceDiv.innerHTML = `
      <span>${service.serviceName} - ${service.amount.toFixed(2)}</span>
      <span class="delete-service" onclick="deleteService(${index})">Delete</span>
    `;
          selectedServicesContainer.appendChild(serviceDiv);
        });
      }

      // Function to update the total standard fees
      function updateTotalStandardFees() {
        const totalStandardFees = selectedServices.reduce(
          (total, service) => total + service.amount,
          0
        );
        document.getElementById("totalStandardFees").textContent =
          totalStandardFees.toFixed(2);
      }

      // Function to delete a selected service
      function deleteService(index) {
        // Remove the selected service from the array
        selectedServices.splice(index, 1);

        // Update the display
        updateSelectedServicesDisplay();
        updateTotalStandardFees();
      }

      // Add an event listener to the submit button
      document
        .getElementById("leadForm")
        .addEventListener("submit", async function (event) {
          // Prevent the default form submission behavior
          event.preventDefault();

          // Create an object from the form data
          const formData = {
            firstName: document.getElementById("firstName").value,
            lastName: document.getElementById("lastName").value,
            phone: document.getElementById("phone").value,
            services: selectedServices.map((service) => ({
              serviceName: service.serviceName,
              amount: service.amount,
              remark: service.remark,
            })),
            // Add other form fields as needed
          };

          try {
            // Use Axios to submit the form data to the POST endpoint
            const response = await axios.post("/banker/createLead", formData);

            // Axios automatically handles status codes, so you can check if the response is successful
            if (response.status === 200) {
              // Success!
              location.replace("/banker/dashboard");
            } else {
              // Handle other status codes if needed
              throw new Error(`HTTP error! Status: ${response.status}`);
            }
          } catch (error) {
            console.error("Error:", error);
            alert("Error creating lead. Please try again.");
          }
        });
    </script>
  </body>
</html>
